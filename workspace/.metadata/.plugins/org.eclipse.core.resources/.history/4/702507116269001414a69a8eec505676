/*
 * DataStructureTester.h
 *
 *  Created on: Nov 10, 2014
 *      Author: Irina
 */

#ifndef DATASTRUCTURETESTER_H_
#define DATASTRUCTURETESTER_H_

namespace ods {
template<class T>
class DataStructureTester {
public:
	DataStructureTester();
	~DataStructureTester();
	int DoSequentialAdd(int start, int end, int step);
	int DoRandomAdd(int n);
	int DoSequentialRemove(int start, int end, int step);
	int DoRandomRemove(int n);
	int DoSequentialFind(int start, int end, int step);
	int DoRandomFind(int n);
};

template<class T>
int DataStructureTester<T>::DoSequentialAdd(int start, int end, int step) {
	for (int i = start; i <= end; i += step) {
		// put in add function
	}
}

template<class T>
int DataStructureTester<T>::DoRandomAdd(int n) {

}

template<class T>
int DataStructureTester<T>::DoSequentialRemove(int start, int end, int step) {
	for (int i = start; i <= end; i += step) {
		// put in remove function
	}
}

template<class T>
int DataStructureTester<T>::DoRandomRemove(int n) {

}

template<class T>
int DataStructureTester<T>::DoSequentialFind(int start, int end, int step) {
	for (int i = start; i <= end; i += step) {
		// put in find function
	}
}

template<class T>
int DataStructureTester<T>::DoRandomFind(int n) {

}
}

#endif /* DATASTRUCTURETESTER_H_ */
